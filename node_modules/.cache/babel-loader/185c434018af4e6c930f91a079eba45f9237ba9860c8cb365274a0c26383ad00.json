{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/esad/esad-admin/src/RegisteredEmployee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from './firebaseConfig'; // Adjust path if needed\nimport { collection, getDocs } from 'firebase/firestore';\nimport './RegisteredEmployee.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisteredEmployee() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const employeesCollectionRef = collection(db, 'employees');\n        const querySnapshot = await getDocs(employeesCollectionRef);\n        const employeesData = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setEmployees(employeesData);\n      } catch (err) {\n        console.error(\"Error fetching employees: \", err);\n        setError(\"Failed to load employee data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []); // Empty dependency array means this runs once on component mount\n\n  const handleAddNew = () => {\n    navigate('/'); // Navigate to the Register page\n  };\n\n  // Conditional rendering based on state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registered Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNew,\n        className: \"add-employee-button\",\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"employee-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.employeeNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-employees-message\",\n      children: \"No registered employees found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisteredEmployee, \"SlyyKLk16tp6pzPUC97bN69tONU=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisteredEmployee;\nexport default RegisteredEmployee;\nvar _c;\n$RefreshReg$(_c, \"RegisteredEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","db","collection","getDocs","jsxDEV","_jsxDEV","RegisteredEmployee","_s","employees","setEmployees","loading","setLoading","error","setError","navigate","fetchEmployees","employeesCollectionRef","querySnapshot","employeesData","docs","map","doc","id","data","err","console","handleAddNew","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","employee","name","employeeNumber","email","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/esad/esad-admin/src/RegisteredEmployee.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from './firebaseConfig'; // Adjust path if needed\nimport { collection, getDocs } from 'firebase/firestore';\nimport './RegisteredEmployee.css';\n\nfunction RegisteredEmployee() {\n    const [employees, setEmployees] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const employeesCollectionRef = collection(db, 'employees');\n                const querySnapshot = await getDocs(employeesCollectionRef);\n                const employeesData = querySnapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setEmployees(employeesData);\n            } catch (err) {\n                console.error(\"Error fetching employees: \", err);\n                setError(\"Failed to load employee data. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []); // Empty dependency array means this runs once on component mount\n\n    const handleAddNew = () => {\n        navigate('/'); // Navigate to the Register page\n    };\n\n    // Conditional rendering based on state\n    if (loading) {\n        return <div className=\"feedback-container\"><p>Loading employees...</p></div>;\n    }\n\n    if (error) {\n        return <div className=\"feedback-container\"><p className=\"error-message\">{error}</p></div>;\n    }\n\n    return (\n        <div className=\"employee-list-container\">\n            <div className=\"list-header\">\n                <h2>Registered Employees</h2>\n                <button onClick={handleAddNew} className=\"add-employee-button\">\n                    Add New Employee\n                </button>\n            </div>\n\n            {employees.length > 0 ? (\n                <div className=\"table-wrapper\">\n                    <table className=\"employee-table\">\n                        <thead>\n                        <tr>\n                            <th>Employee Name</th>\n                            <th>Employee Number</th>\n                            <th>Email Address</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {employees.map((employee) => (\n                            <tr key={employee.id}>\n                                <td>{employee.name}</td>\n                                <td>{employee.employeeNumber}</td>\n                                <td>{employee.email}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            ) : (\n                <p className=\"no-employees-message\">No registered employees found.</p>\n            )}\n        </div>\n    );\n}\n\nexport default RegisteredEmployee;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,QAAQ,kBAAkB,CAAC,CAAC;AACvC,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,sBAAsB,GAAGd,UAAU,CAACD,EAAE,EAAE,WAAW,CAAC;QAC1D,MAAMgB,aAAa,GAAG,MAAMd,OAAO,CAACa,sBAAsB,CAAC;QAC3D,MAAME,aAAa,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UACjDC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACHd,YAAY,CAACS,aAAa,CAAC;MAC/B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACVC,OAAO,CAACb,KAAK,CAAC,4BAA4B,EAAEY,GAAG,CAAC;QAChDX,QAAQ,CAAC,uDAAuD,CAAC;MACrE,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvBZ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAACvB,OAAA;QAAAuB,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChF;EAEA,IAAIpB,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAACvB,OAAA;QAAGsB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEhB;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7F;EAEA,oBACI3B,OAAA;IAAKsB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBvB,OAAA;QAAAuB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B3B,OAAA;QAAQ4B,OAAO,EAAEP,YAAa;QAACC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAE/D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELxB,SAAS,CAAC0B,MAAM,GAAG,CAAC,gBACjB7B,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1BvB,OAAA;QAAOsB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvB,OAAA;UAAAuB,QAAA,eACAvB,OAAA;YAAAuB,QAAA,gBACIvB,OAAA;cAAAuB,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB3B,OAAA;cAAAuB,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxB3B,OAAA;cAAAuB,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACR3B,OAAA;UAAAuB,QAAA,EACCpB,SAAS,CAACY,GAAG,CAAEe,QAAQ,iBACpB9B,OAAA;YAAAuB,QAAA,gBACIvB,OAAA;cAAAuB,QAAA,EAAKO,QAAQ,CAACC;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB3B,OAAA;cAAAuB,QAAA,EAAKO,QAAQ,CAACE;YAAc;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClC3B,OAAA;cAAAuB,QAAA,EAAKO,QAAQ,CAACG;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAHpBG,QAAQ,CAACb,EAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIhB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,gBAEN3B,OAAA;MAAGsB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACzB,EAAA,CA3EQD,kBAAkB;EAAA,QAINN,WAAW;AAAA;AAAAuC,EAAA,GAJvBjC,kBAAkB;AA6E3B,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}